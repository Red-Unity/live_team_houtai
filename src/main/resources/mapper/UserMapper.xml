<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.live.liveteam.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.live.liveteam.entity.User" >
    <constructor >
      <idArg column="open_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="last_visit_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="session_key" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="city" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="province" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="country" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="avatar_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="gender" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="nick_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_birthday" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="user_iphone" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    open_id, create_time, last_visit_time, session_key, city, province, country, avatar_url, 
    gender, nick_name, user_birthday, user_iphone
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.live.liveteam.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where open_id = #{openId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where open_id = #{openId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.live.liveteam.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.live.liveteam.entity.User" >
    insert into user (open_id, create_time, last_visit_time, 
      session_key, city, province, 
      country, avatar_url, gender, 
      nick_name, user_birthday, user_iphone
      )
    values (#{openId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastVisitTime,jdbcType=TIMESTAMP}, 
      #{sessionKey,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{nickName,jdbcType=VARCHAR}, #{userBirthday,jdbcType=BIGINT}, #{userIphone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.live.liveteam.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="openId != null" >
        open_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastVisitTime != null" >
        last_visit_time,
      </if>
      <if test="sessionKey != null" >
        session_key,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="userBirthday != null" >
        user_birthday,
      </if>
      <if test="userIphone != null" >
        user_iphone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastVisitTime != null" >
        #{lastVisitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionKey != null" >
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null" >
        #{userBirthday,jdbcType=BIGINT},
      </if>
      <if test="userIphone != null" >
        #{userIphone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.live.liveteam.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.openId != null" >
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastVisitTime != null" >
        last_visit_time = #{record.lastVisitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sessionKey != null" >
        session_key = #{record.sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null" >
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null" >
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.userBirthday != null" >
        user_birthday = #{record.userBirthday,jdbcType=BIGINT},
      </if>
      <if test="record.userIphone != null" >
        user_iphone = #{record.userIphone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set open_id = #{record.openId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_visit_time = #{record.lastVisitTime,jdbcType=TIMESTAMP},
      session_key = #{record.sessionKey,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      user_birthday = #{record.userBirthday,jdbcType=BIGINT},
      user_iphone = #{record.userIphone,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.live.liveteam.entity.User" >
    update user
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastVisitTime != null" >
        last_visit_time = #{lastVisitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionKey != null" >
        session_key = #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null" >
        user_birthday = #{userBirthday,jdbcType=BIGINT},
      </if>
      <if test="userIphone != null" >
        user_iphone = #{userIphone,jdbcType=VARCHAR},
      </if>
    </set>
    where open_id = #{openId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.live.liveteam.entity.User" >
    update user
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      last_visit_time = #{lastVisitTime,jdbcType=TIMESTAMP},
      session_key = #{sessionKey,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      user_birthday = #{userBirthday,jdbcType=BIGINT},
      user_iphone = #{userIphone,jdbcType=VARCHAR}
    where open_id = #{openId,jdbcType=VARCHAR}
  </update>
</mapper>